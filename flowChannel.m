function out = model
%
% flowChannel.m
%
% Model exported on Sep 27 2023, 17:03 by COMSOL 6.1.0.282.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('F:\1. COMSOL\3-flow-channel');

model.label('flow-channel.mph');

model.title('Flow channel simulation');

model.description('Low mesh quality near the bonding edge, need further mesh refinement.');

model.param.set('w0', '1.5[cm]', 'Width of the block');
model.param.set('w1', '1[cm]', 'Width the channel');
model.param.set('d0', '0.5[mm]', 'Radius of inlet');
model.param.set('d1', '0.5[mm]', 'Inlet position');
model.param.set('l0', '2.5[cm]', 'Length of the block');
model.param.set('t0', '0.5[mm]', 'Thickness of the block');
model.param.set('t1', '2.5[mm]', 'Thickness of PDMS');
model.param.set('t2', '50[um]', 'Height of channel');
model.param.set('w3', '1.5[cm]');
model.param.set('mu1', '1.76e-5[Pa*s]', 'Dynamic viscosity');
model.param.set('Q0', '6.6667E-6[m^3/s]', 'Flow rate');
model.param.set('p0', '3000[Pa]', 'Inlet pressure');
model.param.set('rho1', '1.2506[kg/m^3]', 'Density of gases (CO2, N2, He, Ar)');
model.param.set('Mn1', '1[g/mol]');

model.component.create('comp1', true);

model.component('comp1').geom.create('geom1', 3);

model.component('comp1').func.create('pw1', 'Piecewise');
model.component('comp1').func('pw1').set('arg', 't');
model.component('comp1').func('pw1').set('pieces', {'0' '5' 'Q0*t/5'; '5' '10' 'Q0'});
model.component('comp1').func('pw1').set('argunit', 's');
model.component('comp1').func('pw1').set('fununit', 'm^3/s');

model.component('comp1').mesh.create('mesh1');

model.component('comp1').geom('geom1').lengthUnit('cm');
model.component('comp1').geom('geom1').geomRep('comsol');
model.component('comp1').geom('geom1').create('wp1', 'WorkPlane');
model.component('comp1').geom('geom1').feature('wp1').set('quickplane', 'yz');
model.component('comp1').geom('geom1').feature('wp1').set('unite', true);
model.component('comp1').geom('geom1').feature('wp1').geom.create('r1', 'Rectangle');
model.component('comp1').geom('geom1').feature('wp1').geom.feature('r1').set('size', {'w0' 't0'});
model.component('comp1').geom('geom1').feature('wp1').geom.create('r2', 'Rectangle');
model.component('comp1').geom('geom1').feature('wp1').geom.feature('r2').set('pos', {'0' 't0'});
model.component('comp1').geom('geom1').feature('wp1').geom.feature('r2').set('size', {'w0' 't1'});
model.component('comp1').geom('geom1').feature('wp1').geom.create('r3', 'Rectangle');
model.component('comp1').geom('geom1').feature('wp1').geom.feature('r3').set('pos', {'w0/2-w1/2' 't0'});
model.component('comp1').geom('geom1').feature('wp1').geom.feature('r3').set('size', {'w1' 't2'});
model.component('comp1').geom('geom1').create('ext1', 'Extrude');
model.component('comp1').geom('geom1').feature('ext1').setIndex('distance', 'l0', 0);
model.component('comp1').geom('geom1').feature('ext1').selection('input').set({'wp1'});
model.component('comp1').geom('geom1').run;
model.component('comp1').geom('geom1').run('fin');

model.component('comp1').variable.create('var1');
model.component('comp1').variable('var1').set('inflow', 'intop1(u2)');
model.component('comp1').variable('var1').set('outflow', 'intop2(u2)');

model.component('comp1').view('view2').tag('view4');
model.view.create('view3', 2);
model.view.create('view5', 2);
model.view.create('view6', 2);

model.component('comp1').material.create('mat1', 'Common');
model.component('comp1').material.create('mat2', 'Common');
model.component('comp1').material.create('mat5', 'Common');
model.component('comp1').material('mat1').selection.set([1]);
model.component('comp1').material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.component('comp1').material('mat1').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.component('comp1').material('mat2').selection.set([2]);
model.component('comp1').material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.component('comp1').material('mat5').selection.set([3]);
model.component('comp1').material('mat5').propertyGroup('def').func.create('eta', 'Piecewise');
model.component('comp1').material('mat5').propertyGroup('def').func.create('Cp', 'Piecewise');
model.component('comp1').material('mat5').propertyGroup('def').func.create('rho', 'Analytic');
model.component('comp1').material('mat5').propertyGroup('def').func.create('k', 'Piecewise');
model.component('comp1').material('mat5').propertyGroup.create('idealGas', 'Ideal gas');
model.component('comp1').material('mat5').propertyGroup('idealGas').func.create('Cp', 'Piecewise');

model.component('comp1').cpl.create('maxop1', 'Maximum');
model.component('comp1').cpl.create('intop1', 'Integration');
model.component('comp1').cpl.create('intop2', 'Integration');
model.component('comp1').cpl.create('aveop1', 'Average');
model.component('comp1').cpl('maxop1').selection.geom('geom1', 2);
model.component('comp1').cpl('maxop1').selection.set([11]);
model.component('comp1').cpl('intop1').selection.geom('geom1', 2);
model.component('comp1').cpl('intop1').selection.set([8]);
model.component('comp1').cpl('intop2').selection.geom('geom1', 2);
model.component('comp1').cpl('intop2').selection.set([18]);
model.component('comp1').cpl('aveop1').selection.geom('geom1', 2);
model.component('comp1').cpl('aveop1').selection.set([8]);

model.component('comp1').common.create('free1', 'DeformingDomain');
model.component('comp1').common.create('sym1', 'Symmetry');
model.component('comp1').common('free1').selection.set([3]);
model.component('comp1').common('sym1').selection.set([8 18]);

model.component('comp1').physics.create('spf', 'LaminarFlow', 'geom1');
model.component('comp1').physics('spf').field('velocity').field('u2');
model.component('comp1').physics('spf').field('velocity').component({'u2' 'v2' 'w2'});
model.component('comp1').physics('spf').selection.set([3]);
model.component('comp1').physics('spf').create('inl1', 'InletBoundary', 2);
model.component('comp1').physics('spf').feature('inl1').selection.set([8]);
model.component('comp1').physics('spf').create('out1', 'OutletBoundary', 2);
model.component('comp1').physics('spf').feature('out1').selection.set([18]);
model.component('comp1').physics('spf').create('ge1', 'GlobalEquations', -1);
model.component('comp1').physics('spf').feature('ge1').set('DependentVariableQuantity', 'none');
model.component('comp1').physics('spf').feature('ge1').set('CustomDependentVariableUnit', 'Pa');
model.component('comp1').physics.create('solid', 'SolidMechanics', 'geom1');
model.component('comp1').physics('solid').selection.set([1 2]);
model.component('comp1').physics('solid').create('fix1', 'Fixed', 2);
model.component('comp1').physics('solid').feature('fix1').selection.set([3]);
model.component('comp1').physics('solid').create('sym2', 'SymmetrySolid', 2);
model.component('comp1').physics('solid').feature('sym2').selection.set([1 4 16 17]);

model.component('comp1').multiphysics.create('fsi1', 'FluidStructureInteractionBC', 2);
model.component('comp1').multiphysics('fsi1').selection.set([9 10 11 12]);

model.component('comp1').mesh('mesh1').create('ftri1', 'FreeTri');
model.component('comp1').mesh('mesh1').create('map1', 'Map');
model.component('comp1').mesh('mesh1').create('bl1', 'BndLayer');
model.component('comp1').mesh('mesh1').create('ftet1', 'FreeTet');
model.component('comp1').mesh('mesh1').feature('ftri1').selection.set([10 11]);
model.component('comp1').mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.component('comp1').mesh('mesh1').feature('ftri1').create('dis1', 'Distribution');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('dis1').selection.set([10 12 29 30]);
model.component('comp1').mesh('mesh1').feature('map1').selection.set([9 12]);
model.component('comp1').mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.component('comp1').mesh('mesh1').feature('map1').feature('dis1').selection.set([9 14]);
model.component('comp1').mesh('mesh1').feature('bl1').selection.geom('geom1', 3);
model.component('comp1').mesh('mesh1').feature('bl1').selection.set([3]);
model.component('comp1').mesh('mesh1').feature('bl1').create('blp', 'BndLayerProp');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').selection.set([9 10 11 12]);
model.component('comp1').mesh('mesh1').feature('ftet1').create('size1', 'Size');

model.view('view3').axis.set('xmin', 0.6615582704544067);
model.view('view3').axis.set('xmax', 1.858852505683899);
model.view('view3').axis.set('ymin', -0.15346595644950867);
model.view('view3').axis.set('ymax', 0.6100934147834778);
model.component('comp1').view('view4').label('View 4');
model.component('comp1').view('view4').axis.set('xmin', -0.07500004768371582);
model.component('comp1').view('view4').axis.set('xmax', 1.5750000476837158);
model.component('comp1').view('view4').axis.set('ymin', -1.0129612684249878);
model.component('comp1').view('view4').axis.set('ymax', 1.312961220741272);
model.view('view5').axis.set('xmin', -0.042685285210609436);
model.view('view5').axis.set('xmax', 2.5823147296905518);
model.view('view5').axis.set('ymin', -1.516374945640564);
model.view('view5').axis.set('ymax', 2.96622371673584);
model.view('view6').axis.set('xmin', -2.562201499938965);
model.view('view6').axis.set('xmax', 0.06290855258703232);
model.view('view6').axis.set('ymin', -1.491357445716858);
model.view('view6').axis.set('ymax', 2.991428852081299);

model.component('comp1').material('mat1').label('Silica glass');
model.component('comp1').material('mat1').set('family', 'custom');
model.component('comp1').material('mat1').set('customambient', [1 1 1]);
model.component('comp1').material('mat1').set('fresnel', 0.99);
model.component('comp1').material('mat1').set('roughness', 0.02);
model.component('comp1').material('mat1').set('metallic', 0);
model.component('comp1').material('mat1').set('pearl', 0);
model.component('comp1').material('mat1').set('diffusewrap', 0);
model.component('comp1').material('mat1').set('clearcoat', 0);
model.component('comp1').material('mat1').set('reflectance', 0);
model.component('comp1').material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.component('comp1').material('mat1').propertyGroup('def').set('electricconductivity', {'1e-14[S/m]' '0' '0' '0' '1e-14[S/m]' '0' '0' '0' '1e-14[S/m]'});
model.component('comp1').material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'0.55e-6[1/K]' '0' '0' '0' '0.55e-6[1/K]' '0' '0' '0' '0.55e-6[1/K]'});
model.component('comp1').material('mat1').propertyGroup('def').set('heatcapacity', '703[J/(kg*K)]');
model.component('comp1').material('mat1').propertyGroup('def').set('relpermittivity', {'3.75' '0' '0' '0' '3.75' '0' '0' '0' '3.75'});
model.component('comp1').material('mat1').propertyGroup('def').set('density', '2203[kg/m^3]');
model.component('comp1').material('mat1').propertyGroup('def').set('thermalconductivity', {'1.38[W/(m*K)]' '0' '0' '0' '1.38[W/(m*K)]' '0' '0' '0' '1.38[W/(m*K)]'});
model.component('comp1').material('mat1').propertyGroup('Enu').set('E', '73.1e9[Pa]');
model.component('comp1').material('mat1').propertyGroup('Enu').set('nu', '0.17');
model.component('comp1').material('mat1').propertyGroup('RefractiveIndex').set('n', {'1.45' '0' '0' '0' '1.45' '0' '0' '0' '1.45'});
model.component('comp1').material('mat2').label('PDMS - Polydimethylsiloxane');
model.component('comp1').material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'9e-4[1/K]' '0' '0' '0' '9e-4[1/K]' '0' '0' '0' '9e-4[1/K]'});
model.component('comp1').material('mat2').propertyGroup('def').set('heatcapacity', '1460[J/(kg*K)]');
model.component('comp1').material('mat2').propertyGroup('def').set('relpermittivity', {'2.75' '0' '0' '0' '2.75' '0' '0' '0' '2.75'});
model.component('comp1').material('mat2').propertyGroup('def').set('density', '970[kg/m^3]');
model.component('comp1').material('mat2').propertyGroup('def').set('thermalconductivity', {'0.16[W/(m*K)]' '0' '0' '0' '0.16[W/(m*K)]' '0' '0' '0' '0.16[W/(m*K)]'});
model.component('comp1').material('mat2').propertyGroup('Enu').set('E', '0.1[MPa]');
model.component('comp1').material('mat2').propertyGroup('Enu').set('nu', '0.49');
model.component('comp1').material('mat5').label('Nitrogen 1');
model.component('comp1').material('mat5').set('family', 'air');
model.component('comp1').material('mat5').propertyGroup('def').func('eta').set('arg', 'T');
model.component('comp1').material('mat5').propertyGroup('def').func('eta').set('pieces', {'200.0' '1200.0' '1.77230303E-6+6.27427545E-8*T^1-3.47278555E-11*T^2+1.01243201E-14*T^3'});
model.component('comp1').material('mat5').propertyGroup('def').func('eta').set('argunit', 'K');
model.component('comp1').material('mat5').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.component('comp1').material('mat5').propertyGroup('def').func('Cp').set('arg', 'T');
model.component('comp1').material('mat5').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1200.0' '1088.22121-0.365941919*T^1+7.88715035E-4*T^2-3.749223E-7*T^3+3.17599068E-11*T^4'});
model.component('comp1').material('mat5').propertyGroup('def').func('Cp').set('argunit', 'K');
model.component('comp1').material('mat5').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.component('comp1').material('mat5').propertyGroup('def').func('rho').set('expr', 'pA*0.02801/R_const[K*mol/J]/T');
model.component('comp1').material('mat5').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.component('comp1').material('mat5').propertyGroup('def').func('rho').set('dermethod', 'manual');
model.component('comp1').material('mat5').propertyGroup('def').func('rho').set('argders', {'pA' 'd(pA*0.02801/R_const/T,pA)'; 'T' 'd(pA*0.02801/R_const/T,T)'});
model.component('comp1').material('mat5').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.component('comp1').material('mat5').propertyGroup('def').func('rho').set('argunit', {'Pa' 'K'});
model.component('comp1').material('mat5').propertyGroup('def').func('rho').set('plotargs', {'pA' '0' '1'; 'T' '0' '1'});
model.component('comp1').material('mat5').propertyGroup('def').func('k').set('arg', 'T');
model.component('comp1').material('mat5').propertyGroup('def').func('k').set('pieces', {'200.0' '1200.0' '3.6969697E-4+9.74353924E-5*T^1-4.07587413E-8*T^2+7.68453768E-12*T^3'});
model.component('comp1').material('mat5').propertyGroup('def').func('k').set('argunit', 'K');
model.component('comp1').material('mat5').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.component('comp1').material('mat5').propertyGroup('def').set('dynamicviscosity', 'mu1');
model.component('comp1').material('mat5').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.component('comp1').material('mat5').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.component('comp1').material('mat5').propertyGroup('def').set('density', 'rho1');
model.component('comp1').material('mat5').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.component('comp1').material('mat5').propertyGroup('def').addInput('temperature');
model.component('comp1').material('mat5').propertyGroup('def').addInput('pressure');
model.component('comp1').material('mat5').propertyGroup('idealGas').func('Cp').label('Piecewise 2');
model.component('comp1').material('mat5').propertyGroup('idealGas').func('Cp').set('arg', 'T');
model.component('comp1').material('mat5').propertyGroup('idealGas').func('Cp').set('pieces', {'200.0' '1200.0' '1088.22121-0.365941919*T^1+7.88715035E-4*T^2-3.749223E-7*T^3+3.17599068E-11*T^4'});
model.component('comp1').material('mat5').propertyGroup('idealGas').func('Cp').set('argunit', 'K');
model.component('comp1').material('mat5').propertyGroup('idealGas').func('Cp').set('fununit', 'J/(kg*K)');
model.component('comp1').material('mat5').propertyGroup('idealGas').set('Rs', 'R_const/Mn');
model.component('comp1').material('mat5').propertyGroup('idealGas').set('heatcapacity', 'Cp(T)');
model.component('comp1').material('mat5').propertyGroup('idealGas').set('ratioofspecificheat', '1.4');
model.component('comp1').material('mat5').propertyGroup('idealGas').set('molarmass', '0.02801');
model.component('comp1').material('mat5').propertyGroup('idealGas').addInput('temperature');
model.component('comp1').material('mat5').propertyGroup('idealGas').addInput('pressure');

model.component('comp1').physics('spf').prop('PhysicalModelProperty').set('Compressibility', 'CompressibleMALT03');
model.component('comp1').physics('spf').prop('TurbulenceModelProperty').set('WallTreatment', 'WallFunctions');
model.component('comp1').physics('spf').prop('TurbulenceModelProperty').set('Cs', 0.01);
model.component('comp1').physics('spf').feature('fp1').set('mu_init_app', 'spf.mu0');
model.component('comp1').physics('spf').feature('dcont1').set('pairDisconnect', true);
model.component('comp1').physics('spf').feature('dcont1').label('Continuity');
model.component('comp1').physics('spf').feature('inl1').set('BoundaryCondition', 'Pressure');
model.component('comp1').physics('spf').feature('inl1').set('U0in', 2);
model.component('comp1').physics('spf').feature('inl1').set('p0', 'p0');
model.component('comp1').physics('spf').feature('inl1').set('SuppressBackflow', false);
model.component('comp1').physics('spf').feature('inl1').set('FullyDevelopedFlowOption', 'V0');
model.component('comp1').physics('spf').feature('inl1').set('Uavfdf', 2);
model.component('comp1').physics('spf').feature('inl1').set('V0fdf', 'pw1(t)');
model.component('comp1').physics('spf').feature('inl1').set('mfr', 'pw1(t)');
model.component('comp1').physics('spf').feature('out1').set('NormalFlow', true);
model.component('comp1').physics('spf').feature('out1').set('SuppressBackflow', false);
model.component('comp1').physics('spf').feature('out1').set('FullyDevelopedFlowOption', 'V0');
model.component('comp1').physics('spf').feature('ge1').set('name', 'p0');
model.component('comp1').physics('spf').feature('ge1').set('equation', 'inflow-pw1(t)');
model.component('comp1').physics('spf').feature('ge1').set('SourceTermQuantity', 'none');
model.component('comp1').physics('spf').feature('ge1').set('CustomSourceTermUnit', 'm^3/s');
model.component('comp1').physics('solid').prop('AdvancedSettings').set('GroupPhysOdesRc', false);
model.component('comp1').physics('solid').prop('AdvancedSettings').set('GroupPhysOdesAtt', false);
model.component('comp1').physics('solid').feature('dcnt1').set('pairDisconnect', true);
model.component('comp1').physics('solid').feature('dcnt1').label('Contact');
model.component('comp1').physics('solid').feature('dcont1').set('pairDisconnect', true);
model.component('comp1').physics('solid').feature('dcont1').label('Continuity');

model.component('comp1').mesh('mesh1').feature('size').set('hauto', 4);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hauto', 7);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('table', 'cfd');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('dis1').set('numelem', 50);
model.component('comp1').mesh('mesh1').feature('map1').feature('dis1').set('numelem', 2);
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blnlayers', 6);
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.5);
model.component('comp1').mesh('mesh1').feature('ftet1').feature('size1').set('custom', 'on');
model.component('comp1').mesh('mesh1').feature('ftet1').feature('size1').set('hmax', 0.15);
model.component('comp1').mesh('mesh1').feature('ftet1').feature('size1').set('hmin', '1e-6');
model.component('comp1').mesh('mesh1').feature('ftet1').feature('size1').set('hminactive', true);
model.component('comp1').mesh('mesh1').feature('ftet1').feature('size1').set('hmaxactive', false);
model.component('comp1').mesh('mesh1').run;

model.study.create('std1');
model.study('std1').create('param', 'Parametric');
model.study('std1').create('time', 'Transient');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').attach('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').create('d2', 'Direct');
model.sol('sol1').feature('t1').create('d3', 'Direct');
model.sol('sol1').feature('t1').create('d4', 'Direct');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').create('i2', 'Iterative');
model.sol('sol1').feature('t1').create('tpDef', 'TimeParametric');
model.sol('sol1').feature('t1').create('ar1', 'AutoRemesh');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').create('ss4', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').create('fsi11', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').create('fsi12', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').create('fsi13', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').create('fsi14', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol.create('sol5');
model.sol('sol5').study('std1');
model.sol('sol5').label('Parametric Solutions 2');

model.result.dataset.create('surf1', 'Surface');
model.result.dataset.create('dset3', 'Solution');
model.result.dataset('surf1').selection.set([11]);
model.result.dataset('dset3').set('solution', 'sol5');
model.result.dataset.remove('dset2');
model.result.create('pg17', 'PlotGroup3D');
model.result.create('pg3', 'PlotGroup3D');
model.result.create('pg4', 'PlotGroup3D');
model.result.create('pg18', 'PlotGroup2D');
model.result.create('pg19', 'PlotGroup2D');
model.result.create('pg14', 'PlotGroup1D');
model.result.create('pg15', 'PlotGroup1D');
model.result('pg17').create('surf1', 'Surface');
model.result('pg17').feature('surf1').set('expr', 'w');
model.result('pg17').feature('surf1').create('def1', 'Deform');
model.result('pg3').create('slc1', 'Slice');
model.result('pg4').create('slc1', 'Slice');
model.result('pg4').feature('slc1').set('expr', 'p');
model.result('pg18').create('surf1', 'Surface');
model.result('pg18').feature('surf1').set('expr', 'solid.sxx');
model.result('pg19').create('surf1', 'Surface');
model.result('pg19').feature('surf1').set('expr', 'solid.syy');
model.result('pg14').create('glob1', 'Global');
model.result('pg15').create('glob1', 'Global');
model.result.export.create('anim1', 'Animation');

model.study('std1').feature('param').active(false);
model.study('std1').feature('param').set('sweeptype', 'filled');
model.study('std1').feature('param').set('pname', {'mu1' 'rho1' 'Mn1'});
model.study('std1').feature('param').set('plistarr', {'0.0000195,0.0000313,0.0000176,0.0000222,0.0000147,0.0000228' '0.1786,0.9002,1.2506,1.7832,1.9769,5.851' '4.003,20.18,28.01,39.95,44.01,131.29'});
model.study('std1').feature('param').set('punit', {'Pa*s' 'kg/m^3' 'g/mol'});
model.study('std1').feature('param').set('plot', true);
model.study('std1').feature('time').set('tlist', 'range(0,0.025,10)');
model.study('std1').feature('time').set('plot', true);

model.sol('sol1').attach('std1');
model.sol('sol1').feature('st1').label('Compile Equations: Time Dependent');
model.sol('sol1').feature('v1').label('Dependent Variables 1.1');
model.sol('sol1').feature('v1').set('clist', {'range(0,0.025,10)' '0.01[s]'});
model.sol('sol1').feature('v1').feature('comp1_u2').set('scalemethod', 'manual');
model.sol('sol1').feature('v1').feature('comp1_u2').set('scaleval', '1e9');
model.sol('sol1').feature('t1').label('Time-Dependent Solver 1.1');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.025,10)');
model.sol('sol1').feature('t1').set('tout', 'tsteps');
model.sol('sol1').feature('t1').set('rtol', 0.001);
model.sol('sol1').feature('t1').set('atolglobalfactor', 0.05);
model.sol('sol1').feature('t1').set('atolmethod', {'comp1_p' 'scaled' 'comp1_u2' 'global' 'comp1_ODE1' 'global' 'comp1_spatial_disp' 'global' 'comp1_u' 'global'  ...
'comp1_fsi1_vWall' 'global'});
model.sol('sol1').feature('t1').set('atolfactor', {'comp1_p' '1' 'comp1_u2' '0.1' 'comp1_ODE1' '0.1' 'comp1_spatial_disp' '0.1' 'comp1_u' '0.1'  ...
'comp1_fsi1_vWall' '0.1'});
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('stabcntrl', true);
model.sol('sol1').feature('t1').set('bwinitstepfrac', 0.01);
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').set('plot', true);
model.sol('sol1').feature('t1').feature('dDef').label('Direct 5');
model.sol('sol1').feature('t1').feature('aDef').label('Advanced 1');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').feature('se1').label('Segregated 1.1');
model.sol('sol1').feature('t1').feature('se1').set('maxsegiter', 20);
model.sol('sol1').feature('t1').feature('se1').set('ntolfact', 0.5);
model.sol('sol1').feature('t1').feature('se1').set('ratelimit', 10);
model.sol('sol1').feature('t1').feature('se1').set('ratelimitactive', true);
model.sol('sol1').feature('t1').feature('se1').set('segstabacc', 'segaacc');
model.sol('sol1').feature('t1').feature('se1').set('segaaccdim', 5);
model.sol('sol1').feature('t1').feature('se1').set('segaaccmix', 0.9);
model.sol('sol1').feature('t1').feature('se1').set('segaaccdelay', 1);
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Velocity u2, Pressure p');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_u2' 'comp1_p' 'comp1_ODE1'});
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('subdamp', '0.8');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('subjtech', 'once');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Displacement field');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_spatial_disp'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('subdamp', '0.8');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('subjtech', 'once');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').label('Spatial mesh displacement');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('segvar', {'comp1_u'});
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('linsolver', 'd3');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('subdamp', '0.8');
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('subjtech', 'once');
model.sol('sol1').feature('t1').feature('se1').feature('ss4').label('Fluid-Structure Interaction 1');
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('segvar', {});
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('linsolver', 'd4');
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('subdamp', '0.7');
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('subjtech', 'onevery');
model.sol('sol1').feature('t1').feature('se1').feature('fsi11').label('Segregated Step 11.1');
model.sol('sol1').feature('t1').feature('se1').feature('fsi11').set('linsolver', 'd4');
model.sol('sol1').feature('t1').feature('se1').feature('fsi12').label('Segregated Step 12.1');
model.sol('sol1').feature('t1').feature('se1').feature('fsi12').set('linsolver', 'd4');
model.sol('sol1').feature('t1').feature('se1').feature('fsi13').label('Segregated Step 13.1');
model.sol('sol1').feature('t1').feature('se1').feature('fsi13').set('linsolver', 'd4');
model.sol('sol1').feature('t1').feature('se1').feature('fsi14').label('Segregated Step 14.1');
model.sol('sol1').feature('t1').feature('se1').feature('fsi14').set('segvar', {'comp1_fsi1_vWall'});
model.sol('sol1').feature('t1').feature('se1').feature('fsi14').set('linsolver', 'd4');
model.sol('sol1').feature('t1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d2').label('Suggested Direct Solver (solid)');
model.sol('sol1').feature('t1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d2').set('pivotperturb', 1.0E-9);
model.sol('sol1').feature('t1').feature('d2').set('nliniterrefine', true);
model.sol('sol1').feature('t1').feature('d3').label('Direct, spatial mesh displacement');
model.sol('sol1').feature('t1').feature('d3').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d3').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('d4').label('Direct 2');
model.sol('sol1').feature('t1').feature('d4').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d4').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 100);
model.sol('sol1').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('t1').feature('i1').feature('ilDef').label('Incomplete LU 1');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').label('Multigrid 1.1');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('nullspace', 'constant');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').label('Presmoother 1');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('soDef').label('SOR 1');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').label('SCGS 1.1');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').label('Postsmoother 1');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('soDef').label('SOR 1');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').label('SCGS 1.1');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').label('Coarse Solver 1');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('dDef').label('Direct 2');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').label('Direct 1.1');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('i2').label('Suggested Iterative Solver (solid)');
model.sol('sol1').feature('t1').feature('i2').set('prefuntype', 'right');
model.sol('sol1').feature('t1').feature('i2').set('rhob', 40);
model.sol('sol1').feature('t1').feature('i2').feature('ilDef').label('Incomplete LU 1');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').label('Multigrid 1.1');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').label('Presmoother 1');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('soDef').label('SOR 2');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('so1').label('SOR 1.1');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('pr').feature('so1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').label('Postsmoother 1');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('soDef').label('SOR 2');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('so1').label('SOR 1.1');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('po').feature('so1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').label('Coarse Solver 1');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('dDef').label('Direct 1');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('mg1').label('Multigrid 1.1');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('mg1').set('iter', 2);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('mg1').set('mglevels', 2);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('mg1').set('maxcoarsedof', 10000);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('mg1').feature('pr').label('Presmoother 1');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('mg1').feature('pr').feature('soDef').label('SOR 1');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('mg1').feature('po').label('Postsmoother 1');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('mg1').feature('po').feature('soDef').label('SOR 1');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('mg1').feature('cs').label('Coarse Solver 1');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').feature('cs').feature('mg1').feature('cs').feature('dDef').label('Direct 1');
model.sol('sol1').feature('t1').feature('tpDef').active(false);
model.sol('sol1').feature('t1').feature('tpDef').label('Time Parametric 1');
model.sol('sol1').feature('t1').feature('tpDef').set('uselsqdata', false);
model.sol('sol1').feature('t1').feature('ar1').active(false);
model.sol('sol1').feature('t1').feature('ar1').label('Automatic Remeshing 1.1');
model.sol('sol1').feature('t1').feature('ar1').set('stopcondtype', 'distortion');
model.sol('sol1').feature('t1').feature('ar1').set('stopdistval', '1');
model.sol('sol1').feature('t1').feature('ar1').set('tadapmesh', {'mesh2' 'mesh3' 'mesh4'});
model.sol('sol1').runAll;

model.result.dataset('surf1').label('Channel wall');
model.result('pg17').label('Displacement');
model.result('pg17').set('edges', false);
model.result('pg17').feature('surf1').label('Displacement');
model.result('pg17').feature('surf1').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result('pg17').feature('surf1').set('colortable', 'RainbowLightClassic');
model.result('pg17').feature('surf1').set('resolution', 'normal');
model.result('pg17').feature('surf1').feature('def1').set('scale', 5.1482485051659825);
model.result('pg17').feature('surf1').feature('def1').set('scaleactive', false);
model.result('pg3').label('Velocity');
model.result('pg3').feature('slc1').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result('pg3').feature('slc1').set('quickplane', 'xy');
model.result('pg3').feature('slc1').set('quickzmethod', 'coord');
model.result('pg3').feature('slc1').set('quickz', 0.00525);
model.result('pg3').feature('slc1').set('interactive', true);
model.result('pg3').feature('slc1').set('shift', '5E-4');
model.result('pg3').feature('slc1').set('colortable', 'RainbowClassic');
model.result('pg3').feature('slc1').set('resolution', 'normal');
model.result('pg4').label('Pressure');
model.result('pg4').feature('slc1').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result('pg4').feature('slc1').set('quickplane', 'xy');
model.result('pg4').feature('slc1').set('quickzmethod', 'coord');
model.result('pg4').feature('slc1').set('quickz', 0.00525);
model.result('pg4').feature('slc1').set('interactive', true);
model.result('pg4').feature('slc1').set('shift', '5E-4');
model.result('pg4').feature('slc1').set('colortable', 'RainbowClassic');
model.result('pg4').feature('slc1').set('resolution', 'normal');
model.result('pg18').label('Channel wall stress x');
model.result('pg18').feature('surf1').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x-coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y-coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z-coordinate'});
model.result('pg18').feature('surf1').set('rangecoloractive', true);
model.result('pg18').feature('surf1').set('rangecolormin', -4000);
model.result('pg18').feature('surf1').set('rangecolormax', 4000);
model.result('pg18').feature('surf1').set('resolution', 'normal');
model.result('pg19').label('Channel wall stress y');
model.result('pg19').feature('surf1').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x-coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y-coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z-coordinate'});
model.result('pg19').feature('surf1').set('rangecoloractive', true);
model.result('pg19').feature('surf1').set('rangecolormin', -4000);
model.result('pg19').feature('surf1').set('rangecolormax', 4000);
model.result('pg19').feature('surf1').set('resolution', 'normal');
model.result('pg14').label('Flow rate');
model.result('pg14').set('xlabel', 'Time (s)');
model.result('pg14').set('ylabel', 'Inflow (m<sup>3</sup>/s)');
model.result('pg14').set('legendpos', 'lowerright');
model.result('pg14').set('xlabelactive', false);
model.result('pg14').set('ylabelactive', false);
model.result('pg14').feature('glob1').set('expr', {'inflow'});
model.result('pg14').feature('glob1').set('unit', {'m^3/s'});
model.result('pg14').feature('glob1').set('descr', {'Inflow'});
model.result('pg14').feature('glob1').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result('pg15').label('Pressure evolution');
model.result('pg15').set('xlabel', 'Time (s)');
model.result('pg15').set('ylabel', 'Pressure (Pa)');
model.result('pg15').set('ylabelactive', true);
model.result('pg15').set('xlabelactive', false);
model.result('pg15').feature('glob1').set('expr', {'aveop1(p)'});
model.result('pg15').feature('glob1').set('unit', {'Pa'});
model.result('pg15').feature('glob1').set('descr', {''});
model.result('pg15').feature('glob1').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z coordinate'});
model.result.export('anim1').set('giffilename', 'F:\Google Drive\flow-channel\deformation.gif');
model.result.export('anim1').set('maxframes', 18);
model.result.export('anim1').set('zoomextents', true);
model.result.export('anim1').set('logo2d', true);
model.result.export('anim1').set('fontsize', '12');
model.result.export('anim1').set('colortheme', 'globaltheme');
model.result.export('anim1').set('customcolor', [1 1 1]);
model.result.export('anim1').set('background', 'color');
model.result.export('anim1').set('gltfincludelines', 'on');
model.result.export('anim1').set('title1d', 'on');
model.result.export('anim1').set('legend1d', 'off');
model.result.export('anim1').set('logo1d', 'off');
model.result.export('anim1').set('options1d', 'on');
model.result.export('anim1').set('title2d', 'on');
model.result.export('anim1').set('legend2d', 'on');
model.result.export('anim1').set('logo2d', 'on');
model.result.export('anim1').set('options2d', 'on');
model.result.export('anim1').set('title3d', 'on');
model.result.export('anim1').set('legend3d', 'on');
model.result.export('anim1').set('logo3d', 'off');
model.result.export('anim1').set('options3d', 'on');
model.result.export('anim1').set('axisorientation', 'off');
model.result.export('anim1').set('grid', 'off');
model.result.export('anim1').set('axes1d', 'on');
model.result.export('anim1').set('axes2d', 'off');
model.result.export('anim1').set('showgrid', 'off');

model.component('comp1').view('view1').hideEntities.create('hide1');
model.component('comp1').view('view1').hideEntities('hide1').geom(3);
model.component('comp1').view('view1').hideEntities('hide1').add([2]);
model.component('comp1').view('view1').hideEntities('hide1').add([1]);

model.component('comp1').mesh('mesh1').run('bl1');

model.component('comp1').view('view1').hideObjects.clear;
model.component('comp1').view('view1').hideEntities.clear;

model.component('comp1').mesh('mesh1').run;

out = model;
